{"version":3,"sources":["app.js"],"names":["IdleTimer","DEFAULT_TIMEOUT","go","ms","undefined","this","_ms","_id","setTimeout","_fn","stop","clearTimeout","resetTime","factory","fn","ColoredButtonDirective","COLORS","restrict","replace","scope","template","link","element","attrs","color","colorIndex","addClass","controller","$scope","SS","$element","Bus","$attrs","vm","isEnabled","whileEnabled","apply","arguments","activate","start","deactivate","removeClass","buttonDown","buttonUp","buttonPress","on","GameCtrl","SoundSystem","sequence","expected","wrong","fire","youLose","failed","isStrict","startOver","rerender","copy","render","bind","responseTimeout","moveDelay","soundLength","responseTimer","isRendering","seq","onDone","logSequence","slice","id","next","shift","setInterval","clearInterval","round","$apply","init","adjustSpeed","youWin","nextRound","whileNotRendering","index","length","isOn","onOff","isStarted","strict","GameBus","events","_events","eventName","push","args","call","fns","forEach","SequenceFactory","randomInt","min","max","Math","random","current","Tone","frequencies","frequenciesWiki","tones","map","generate","play","tone","volume","lvl","ToneService","getAudioContext","_ac","AudioContext","hz","ac","os","createOscillator","gn","createGain","type","frequency","value","gain","_os","_gn","connect","destination","disconnect","l","console","log","green","red","yellow","blue","toArray","Function","prototype","Array","s","e","colorsAsArray","a","c","i","colorIndexToColor","angular","module","constant","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n/* eslint-disable no-undef, no-console, no-unused-vars */\n\nvar l = console.log.bind(console),\n    COLORS = { green:0, red:1, yellow:2, blue:3 },\n    toArray = Function.prototype.call.bind(Array.prototype.slice),\n    s, e,\n    colorsAsArray = function() {\n        var a = [];\n\n        for(var c in COLORS) {\n            var i = COLORS[c];\n            a[i]=c;\n        }\n        return a;\n    },\n    colorIndexToColor = function(index) {\n        return colorsAsArray()[index];\n    },\n    logSequence = function(seq) {\n        l(seq.map(colorIndexToColor));\n    }\n;\n\nangular\n    .module('simonApp', [])\n    .constant('COLORS', COLORS)\n    .factory('ToneService', [ToneService])\n    .factory('SoundSystem', ['ToneService', SoundSystem])\n    .factory('SequenceFactory', SequenceFactory)\n    .factory('Bus', GameBus)\n    .factory('IdleTimer', IdleTimer)\n    .controller('GameCtrl', ['$scope', '$element', 'SoundSystem', 'SequenceFactory', 'Bus', 'IdleTimer', GameCtrl])\n    .directive('coloredButton', ['COLORS', ColoredButtonDirective]);\n\nfunction IdleTimer() {\n    var DEFAULT_TIMEOUT = 1000,\n        go = function(ms) {\n            if( ms!==undefined ) this._ms = ms;\n            this._id = setTimeout(this._fn, this._ms);\n        },\n        stop = function() {\n            clearTimeout(this._id);\n        },\n        resetTime = function() {\n            this.stop();\n            this.go();\n        },\n        factory = function(fn, ms) {\n            ms = ms || DEFAULT_TIMEOUT;\n            return {\n                _ms: ms, _fn: fn, _id: undefined,\n                go: go, stop: stop, resetTime: resetTime\n            };\n        };\n    return factory;\n}\n\nfunction ColoredButtonDirective(COLORS) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: true,\n        template: '<div class=\"sm-btn\"><button ng-mousedown=\"buttonDown()\" ng-mouseup=\"buttonUp()\"  class=\"sm-btn\"></button></div>',\n        link: function(scope, element, attrs) {\n            // l(element, attrs.color);\n            var color = scope.color = attrs.color,\n                colorIndex = scope.colorIndex = COLORS[color];\n\n            element.addClass('sm-' + color);\n        },\n        controller: ['$scope', 'SoundSystem', '$element', 'Bus', '$attrs', function($scope, SS, $element, Bus, $attrs) {\n            var vm = $scope,\n                color = $attrs.color,\n                colorIndex = COLORS[color],\n                isEnabled = false,\n\n                whileEnabled = function(fn) {\n                    return function() {\n                        if( isEnabled ) fn.apply(this, arguments);\n                    };\n                },\n\n                activate = function() {\n                    SS.start(colorIndex);\n                    $element.addClass('sm-active');\n                },\n                deactivate = function() {\n                    SS.stop(colorIndex);\n                    $element.removeClass('sm-active');\n                };\n\n            vm.buttonDown = whileEnabled(activate);\n            vm.buttonUp = whileEnabled(function() {\n                deactivate();\n                vm.buttonPress(colorIndex);\n            });\n            Bus.on('btn' + colorIndex + 'press', activate);\n            Bus.on('btn' + colorIndex + 'release', deactivate);\n            Bus.on('btns:disable', function() { isEnabled = false; });\n            Bus.on('btns:enable', function() { isEnabled = true; });\n        }]\n    };\n}\n\nfunction GameCtrl($scope, $element, SoundSystem, sequence, Bus, IdleTimer) {\n    var vm = $scope,\n\n        element = $element[0],\n        expected,\n        wrong = function(fn) {\n            Bus.fire('btns:disable');\n            SoundSystem.youLose(function() {\n                Bus.fire('btns:enable');\n                fn();\n            });\n        },\n        failed = function() {\n            if( vm.isStrict ) wrong(startOver);\n            else rerender();\n        },\n        rerender = function() {\n            expected = sequence.copy();\n            wrong(render.bind(null, expected));\n        },\n\n        responseTimeout = 5000,\n        moveDelay = 700,\n        soundLength = 300,\n        responseTimer = IdleTimer(failed, responseTimeout),\n        isRendering = false,\n        render = function(seq, onDone) {\n            logSequence(seq);\n            responseTimer.stop();\n            seq = seq.slice();\n            if( isRendering ) return;\n            isRendering=true;\n            Bus.fire('btns:disable');\n\n            var next = seq.shift(),\n                id\n            ;\n            if( next===undefined ) return;\n\n            Bus.fire('btn' + next + 'press');\n            id = setInterval(function() {\n                Bus.fire('btn' + next + 'release');\n                next = seq.shift();\n                if( next===undefined ) {\n                    clearInterval(id);\n                    isRendering = false;\n                    Bus.fire('btns:enable');\n                    responseTimer.go();\n                    if( typeof onDone==='function' ) onDone();\n                    return;\n                }\n\n                setTimeout(function() {\n                    Bus.fire('btn' + next + 'press');\n                }, soundLength);\n            }, moveDelay)\n        },\n        verifyPresses = function(presses) {\n            for(var i=0; i<presses.length; i++) {\n                if( presses[i]!==sequence.current[i]) return false;\n            }\n            return true;\n        },\n        startOver = function() {\n            responseTimeout = 5000;\n            moveDelay = 700;\n            soundLength = 300;\n            responseTimer = IdleTimer(failed, responseTimeout);\n            vm.round=1;\n            vm.$apply();\n            responseTimer.stop();\n            expected = sequence.init();\n            render(expected);\n        },\n        adjustSpeed = function() {\n            //5, 9, 13\n            if( vm.round>12 ) {\n                moveDelay=300;\n                soundLength=150;\n            } else if( vm.round>8 ) {\n                moveDelay=400;\n                soundLength=200;\n            } else if( vm.round>4 ) {\n                moveDelay=500;\n                soundLength=250;\n            }\n        },\n        youWin = function() {\n            moveDelay = 100;\n            soundLength = 100;\n            \n            render([0,1,3,2,0,1,3,2,0,1,3,2,0,1,3,2,0,1,3,2,0,1,3,2,], startOver);\n        },\n        nextRound = function() {\n            vm.round++;\n            vm.$apply();\n            adjustSpeed();\n            responseTimer.stop();\n            expected = sequence.next();\n            render(expected);\n        },\n        whileNotRendering = function(fn) {\n            return function() {\n                if( isRendering ) return;\n                return fn.apply(this, arguments);\n            };\n        }\n    ;\n\n\n    vm.buttonPress = whileNotRendering(function(index) {\n        responseTimer.resetTime();\n        setTimeout(function() {\n            if( expected.shift()===index ) {\n                if( expected.length===0 ) {\n                    if( vm.round===2 ) {\n                        youWin();\n                    } else {\n                        nextRound();\n                    }\n                }\n            } else {\n                failed();\n            }\n        }, 700);\n    });\n\n    vm.isOn = false;\n    vm.onOff = whileNotRendering(function() {\n        vm.isOn = !vm.isOn;\n        responseTimer.stop();\n        if( !vm.isOn ) {\n            vm.isStarted = false;\n            Bus.fire('btns:disable');\n        }\n    });\n    vm.isStarted = false;\n    vm.start = whileNotRendering(function() {\n        if( vm.isOn ) {\n            vm.isStarted = true;\n            // startOver();\n            setTimeout(startOver, 100);\n        }\n    });\n    vm.isStrict = false;\n    vm.strict = whileNotRendering(function() {\n        if( vm.isOn ) {\n            vm.isStrict = !vm.isStrict;\n        }\n    });\n\n        // startOver();\n}\n\nfunction GameBus() {\n    var events = {};\n    return {\n        _events: events,\n        on: function(eventName, fn) {\n            if( !(eventName in events) ) events[eventName] = [];\n            events[eventName].push(fn);\n        },\n        fire: function() {\n            var args = [].slice.call(arguments),\n                eventName = args.shift(),\n                fns = events[eventName]\n            ;\n            if( fns ) {\n                fns.forEach(function(fn) {\n                    fn.apply(null, args);\n                });\n            }\n        }\n    }\n}\nfunction SequenceFactory() {\n    var randomInt = function(min, max) {\n        if( max===undefined ) {\n            max=min;\n            min=0;\n        }\n        return (Math.round(Math.random() * (max-min)) + min)\n    };\n\n    return {\n        current: [],\n        next: function() {\n            this.current.push(randomInt(0, 3));\n            return this.current.slice();\n        },\n        init: function() {\n            this.current = [];\n            this.next();\n            return this.current.slice();\n        },\n        copy: function() {\n            return this.current.slice();\n        }\n    };\n}\n\nfunction SoundSystem(Tone) {\n    // + losing razz of 42hz\n    var frequencies = [ 415, 310, 252, 209 ],\n        frequenciesWiki = [ 164, 440, 277, 329 ],\n        tones = frequencies.map(Tone.generate.bind(Tone)),\n        tones2 = frequenciesWiki.map(Tone.generate.bind(Tone));\n\n    return {\n        start: function(index) {\n            tones[index].start();\n        },\n        stop: function(index) {\n            tones[index].stop();\n        },\n        play: function(index, ms) {\n            tones[index].play(ms);\n        },\n        youLose: function(fn) {\n            var tone = Tone.generate(70);\n\n            tone.start();\n            setTimeout(function() {\n                tone.stop();\n                fn();\n            }, 1000);\n        },\n        youWin: function() {\n            \n        },\n        volume: function(index, lvl) {\n            tones[index].volume(lvl);\n        }\n    };\n}\n\nfunction ToneService() {\n    var Tone = {\n        getAudioContext: function() {\n            if( this._ac===undefined ) {\n                this._ac = new AudioContext();\n            }\n            return this._ac;\n        },\n        generate: function(hz) {\n            var ac = this.getAudioContext(),\n                os = ac.createOscillator(),\n                gn = ac.createGain()\n            ;\n            os.type = 'square';\n            os.frequency.value = hz;\n            os.start(0);\n\n            gn.gain.value = 0.15;\n//            os.connect(gn);\n            return {\n                _ac: ac, _os: os, _gn: gn,\n                start: function() {\n                   // os.connect(ac.destination);\n                    os.connect(gn);\n                    gn.connect(ac.destination);\n                },\n                stop: function() {\n                    os.disconnect();\n                },\n                play: function(ms) {\n                    ms = ms || 300;\n                    this.start();\n                    setTimeout(function() {\n                        this.stop();\n                    }.bind(this), ms);\n                },\n                // float: 0 - 1\n                volume: function(lvl) {\n                    this._gn.gain.value = lvl;\n                }\n            }\n        }\n    };\n    return Tone;\n}\n"],"sourceRoot":"/source/"}